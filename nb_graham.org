Author:  Joe Graham
E-mail:  joe.w.graham@gmail.com
Project: Embedded Ensemble Encoding (EEE) Theory
Drive:   https://drive.google.com/drive/folders/0Bx7OIVIgY3AVU2pKQ21EdFVPVDA

* 2019-01-10 -- Cleaning up and organizing

In progress
-----------
Uninstall Anaconda
Reinstall Anaconda (Python 2 and 3)
Uninstall NEURON
Install latest NEURON
Install Visual Studio Code
Run Sergio's EEE network sim
Summarize current network model
Prepare for discussion with EEE team
Meeting 10am Eastern to discuss network

** Anaconda

*** Uninstalling 

https://docs.anaconda.com/anaconda/install/uninstall/

anaconda-clean doesn't install properly:

	graham-mac% conda install anaconda-clean
	Fatal Python error: initfsencoding: unable to load the file system codec
	  File "/Users/graham/anaconda/lib/python2.7/encodings/__init__.py", line 123
	    raise CodecRegistryError,\
	                            ^
	SyntaxError: invalid syntax

	Current thread 0x0000000111f705c0 (most recent call first):
	Abort
	Fatal Python error: initfsencoding: unable to load the file system codec
	  File "/Users/graham/anaconda/lib/python2.7/encodings/__init__.py", line 123
	    raise CodecRegistryError,\
	                            ^
	SyntaxError: invalid syntax

	Current thread 0x0000000107f365c0 (most recent call first):
	Abort
	graham-mac% 

Seems like it may already be installed.  Just going to run it:

	graham-mac% anaconda-clean
	Delete .anaconda? (Y or N): y
	Delete .bash_profile? (Y or N): n
	Delete .bash_profile-anaconda.bak? (Y or N): n
	Delete .cache? (Y or N): n
	Delete .conda? (Y or N): y
	Delete .condarc? (Y or N): y
	Delete .config? (Y or N): n
	Delete .continuum? (Y or N): y
	Delete .ipynb_checkpoints? (Y or N): y
	Delete .ipython? (Y or N): y
	Delete .jupyter? (Y or N): y
	Delete .matplotlib? (Y or N): y
	graham-mac% 

Now to delete old anaconda dirs:

	/anaconda3
	/Users/graham/anaconda

*** Reinstalling Anaconda

**** To install Python 2 and 3:

http://docs.anaconda.com/anaconda/install/mac-os/#macos-graphical-install
https://conda.io/docs/user-guide/tasks/manage-python.html

Installing Anaconda3, comes with Visual Studio

Having a problem with: "conda search python" and "ipython". 
Switching Terminal to Bash.  Now it works fine.

So far I only have Python 3 installed.  Will try to run network sims in 
Python 3 before bothering with installing 2.7

*** To use Python 2 and 3:

https://docs.anaconda.com/anaconda/user-guide/tasks/switch-environment/

Going to try with just Python 3 for now.

** NEURON

Uninstalling and reinstalling NEURON.

Moving /Applications/NEURON-7.5 to the Desktop (will delete once everything
is working

Getting latest copy of NEURON
https://www.neuron.yale.edu/neuron/download

Running gui installer.  Seems to have worked: can run programs from Finder,
but not from command line.

Looking at path:
	graham$ echo $PATH
	/Users/graham/anaconda3/bin:/usr/site/nrniv/local/python/anaconda3/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/anaconda3/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/Users/graham/anaconda/bin:/Applications/NEURON-7.4/nrn/x86_64/bin://anaconda/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin:/opt/X11/bin

Okay, my new NEURON is in NEURON-7.6, not NEURON-7.4
Need to update my PATH

https://hathaway.cc/2008/06/how-to-edit-your-path-environment-variables-on-mac/

Editing .bash_profile, changing all 7.4 to 7.6

Now NEURON commands run from command line.


** EEE Network Sims

*** Updating repo:
https://github.com/Neurosim-lab/EEE_network

	graham$ git clone https://github.com/Neurosim-lab/EEE_network.git
	graham$ cd EEE_network/mod/
	graham$ nrnivmodl

Looks good except for ghk.inc:

	Translating NMDAeee.mod into NMDAeee.c
	"/Applications/NEURON-7.6/nrn/x86_64/bin/nocmodl" PlateauConductance
	Couldn't open: ghk.inc
	Couldn't open ghk.inc
	make: *** [NMDAeee.lo] Error 1

Looks like there is no ghk.inc in the mod dir...

	graham$ git clone https://github.com/Neurosim-lab/EEE_network.git
	graham$ cd EEE_network/mod/
	graham$ cp /usr/site/nrniv/local/mod/ghk.inc ./ghk.inc
	graham$ nrnivmodl

Now it seems to have worked fine.  
Will add ghk.inc to the git repo.

But first, I notice I need to merge Salvador's improvements from his
'simplify' branch to the Master... done.

Starting over.

	graham$ rm -rf EEE_network/
	graham$ git clone https://github.com/Neurosim-lab/EEE_network.git
	graham$ cd EEE_network/mod/
	graham$ nrnivmodl

Still has the ghk.inc problem.  Will add to repo.

	graham$ cd ~
	graham$ rm -rf EEE_network/
	graham$ git clone https://github.com/Neurosim-lab/EEE_network.git
	graham$ cd EEE_network/mod/
	graham$ cp /usr/site/nrniv/local/mod/ghk.inc ./ghk.inc
	graham$ git status
	On branch master
	Your branch is up to date with 'origin/master'.

	Untracked files:
	  (use "git add <file>..." to include in what will be committed)

		ghk.inc

	nothing added to commit but untracked files present (use "git add" to track)
	graham$ git add ghk.inc 
	graham$ git status
	On branch master
	Your branch is up to date with 'origin/master'.

	Changes to be committed:
	  (use "git reset HEAD <file>..." to unstage)

		new file:   ghk.inc

	graham$ git commit -m "Added ghk.inc which is needed by NMDAeee.mod"
	[master 5fb1177] Added ghk.inc which is needed by NMDAeee.mod
	 1 file changed, 35 insertions(+)
	 create mode 100644 mod/ghk.inc
	graham$ git push
	Counting objects: 4, done.
	Delta compression using up to 8 threads.
	Compressing objects: 100% (4/4), done.
	Writing objects: 100% (4/4), 742 bytes | 742.00 KiB/s, done.
	Total 4 (delta 2), reused 0 (delta 0)
	remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
	To https://github.com/Neurosim-lab/EEE_network.git
	   700cd24..5fb1177  master -> master

So everything should work now.  Trying it out.

	graham$ cd ~
	graham$ rm -rf EEE_network/
	graham$ git clone https://github.com/Neurosim-lab/EEE_network.git
	graham$ cd EEE_network/mod/
	graham$ nrnivmodl

Works perfectly now.  

Need to symlink mod/x86_64 into eee_network

	graham$ ln -s /Users/graham/EEE_network/mod/x86_64 /Users/graham/EEE_network/eee_network/x86_64

Now hopefully everything works.

*** Running EEE network sim

To debug in Netpyne, run files in the following order:

1) netParams.py 
2) batch_init.py (just init.py in this case) 
3) batch.py

Trying to run netParams.py:
	graham$ python netParams.py 
	Traceback (most recent call last):
	  File "netParams.py", line 1, in <module>
	    from netpyne import specs
	ModuleNotFoundError: No module named 'netpyne'

Need to install Netpyne (development version to immediately get fixes):
http://www.netpyne.org/install.html#install-via-pip-development-version

	1. git clone https://github.com/Neurosim-lab/netpyne.git
	2. cd netpyne
	3. git checkout development
	4. pip install -e .

	pip will add a symlink in the default python packages folder to the cloned netpyne folder (so you don’t need to modify PYTHONPATH). If new changes are available just need to pull from cloned netpyne repo.

Commands:
	graham$ cd ~/Applications/
	graham$ git clone https://github.com/Neurosim-lab/netpyne.git
	graham$ cd netpyne/
	graham$ git checkout development
	graham$ pip install -e .

Everything seems to have worked.

Trying to run netParams again:
	
	graham$ cd ~/EEE_network/eee_network/
	graham$ python netParams.py
	Note: NeuroML import failed; import/export functions for NeuroML will not be available. 
	  To install the pyNeuroML & libNeuroML Python packages visit: https://www.neuroml.org/getneuroml
	Traceback (most recent call last):
	  File "netParams.py", line 95, in <module>
	    for secName,sec in netParams.cellParams['PT5_1']['secs'].iteritems():         
	TypeError: 'Dict' object is not callable

Seems to be a problem with Python 2 --> 3
https://github.com/mgymrek/itable/issues/9
https://stackoverflow.com/questions/10458437/what-is-the-difference-between-dict-items-and-dict-iteritems

I changed two `iteritems` in netParams to `items` and now it works.

So netParams works now.  Now to run init.py

	graham$ python init.py

Something's not quite right:

	Plotting raster...
	There was an exception in plotRaster(): 
	 "['tags'] not found in axis" 
	(<class 'KeyError'>, KeyError("['tags'] not found in axis"), <traceback object at 0x12223ea88>)

Also, traces plot appeared in eee_network dir, but it's blank.

Also, there are too few cells...

Line 130 in cfg.py was:
cfg.singleCellPops = True

Changed it to False and trying again.

Running netParams works fine.  
When I run init, it seems like there are no connections and no traces recorded:

	Creating network of 5 cell populations on 1 hosts...
	  Number of cells on node 0: 1500 
	  Done; cell creation time = 4.66 s.
	Making connections...
	  Number of connections on node 0: 0 
	  Done; cell connection time = 0.00 s.
	  Number of stims on node 0: 0 
	  Done; cell stims creation time = 0.00 s.
	Recording 0 traces of 0 types on node 0

Still getting raster error and blank traces plot.


Changing from hpc_slurm to mpi in batch.py:
#setRunCfg(b, type='hpc_slurm')
setRunCfg(b, type='mpi')

Trying to run batch.py

Getting an error:
	graham$ python batch.py
	Traceback (most recent call last):
	  File "batch.py", line 8, in <module>
	    from netpyne.batch import Batch, specs
	ImportError: cannot import name 'specs' from 'netpyne.batch' (/Users/graham/Applications/netpyne/netpyne/batch/__init__.py)

It seems like I should change importing specs from netpyne.batch to just from netpyne...

Changing batch.py and trying again.

Getting a new error:
	FileNotFoundError: [Errno 2] No such file or directory: 'batch_data/stim_batch6/stim_batch6_batch.json'

I think the dir must already exist...  Changing batch.py to remove need for
extra dir.

New error:
	Error: invalid runCfg 'type' selected; valid types are 'mpi_bulletin', 'mpi_direct', 'hpc_slurm', 'hpc_torque'

Will have to look into this.  Asked Salva:

	joe [9:59 AM]
	Hey Salva, it seems Netpyne used to accept `mpi` as a runCfg option, but now Netpyne requires `mpi_direct` or `mpi_bulletin`…

	Untitled 
	Error: invalid runCfg 'type' selected; valid types are 'mpi_bulletin', 'mpi_direct', 'hpc_slurm', 'hpc_torque'
	Would you mind explaining the difference between `direct` and `bulletin`?
	i.e. which should I be using?

	salvadord [10:03 AM]
	mpi_bulletin - uses NEURON’s mpi bulletin board (master slave) to run the batch sim — there is a master node that sends jobs (each sim) to the slave nodes

	joe [10:05 AM]
	And what does `mpi_direct` do?

	salvadord [10:07 AM]
	mpi_direct - runs each of the batch jobs directly using mpi by calling mpirun via Popen (a pipe) — can specify the number of cores of each mpi job … eg say you have a machine with 16 cores, you could run 4 of the batch jobs on 4 cores each simultaneously
	with mpi_bulleting, each job is always on a single core
	*mpi_bulletin

Okay, so switching to `mpi_bulletin` (seems less complicated):
Changing all `mpi` in batch.py to `mpi_bulletin`

Now batch.py seems to run, but Sergio's default batch was huge: four 
variables each with multiple values.  Will need to set up a smaller batch.  

For now, will look into why there are no connections and no traces.

Running single sim:

graham$ cd ~/EEE_network/eee_network/
graham$ ./runsim

It runs, but no connections or output traces.  Looking into it...

The lack of connectivity is because the connectivity stuff has been commented out. Once we have it working and are getting output we can worry about connectivity.

Having a hard time figuring out the problem with lack of output figures.
I tried adding a soma recording to the cfg file, and when I look in the output json file, the soma trace data is there, but the trace plot output is blank...

Reducing sim time to 50 ms to speed things up.  Commenting out basal trace recording in cfg.

Same thing.  No output traces.

The code is really convoluted.  I'm beginning to think it would be better to start from our cell models and build up network sims from scratch...

Will push my stuff to the git repo now.  Creating a new branch: joes_branch

Cloning, switching to joes_branch, swapping in my changes, then pushing.


* 2019-01-11 -- EEE Network Meeting

In progress
-----------
Summarize current network model
Prepare for discussion with EEE team
Meeting 12pm Eastern to discuss network

** Steps to run network sim

cd ~
git clone https://github.com/Neurosim-lab/EEE_network.git
cd EEE_network/
git checkout joes_branch
cd mod
nrnivmodl
ln -s ~/EEE_network/mod/x86_64 ~/EEE_network/x86_64
cd ../eee_network
./runsim

** EEE Network Sim Meeting -- 2018-01-11
https://docs.google.com/document/d/1jKOPmc2PkjyJme_dgMKip7mLxlXXPuehVY4q-qeBWZs/edit

Google Hangout URL: https://hangouts.google.com/call/UFV-belsSHz1VJv5J4ozAAEE 

Today’s agenda

How to start developing the network model
List of tasks
Division of tasks
	
Discussion

Current state
Disorganized

Network sim development plan
  Scrap existing model
  Two populations: Netpyne tutorial 5
  How many populations? Two
  Where data?  Connectivity?
    Layer 5 IT cells connectivity
    PV cells from M1 model
  Background inputs
  Inputs to both pops
  Want baseline oscillations
How to divide E cells
  Sergio had multiple -- good way to start
  Can force plateaus on subset
How to distribute synapses on neurons
  Bill: 500 inputs 
  One basal has convergence
  Look into clustering
  Strong convergence onto dend A then B
  Other dend possible synchronicity source
Number of cells: ~5000
Trello for task management
Goal of network
  Use existing cell models
  Plug into network
  Look for ensembles
  Preferably emergent
  Synchrony in embedded ensembles
  Activated → Synced
Tasks to be accomplished
  Joe gets framework in place
  Then we divvy up tasks


* 2019-01-15 -- Setting up new network model, EEE Meeting

In progress
-----------
Netpyne Tutorial 5 as basis for network model
Get new model framework into Github
List of synaptic clustering articles
Meeting 11am Eastern - prepare agenda

** Netpyne Tutorial 5

http://netpyne.org/tutorial.html#position-and-distance-based-connectivity-tutorial-5

Downloaded tut5.py and it runs, though I needed to uncomment the following line to see figures:

	import pylab; pylab.show()  # this line is only necessary in certain systems where figures appear empty

The figures should have been saved as well, but never appeared.  Will look into this later.

Downloaded runsim in order to parallelize sims:
	
	#!/bin/bash
	mpiexec -n $1 nrniv -python -mpi $2  # Run the model

Changed permissions on runsim so I can execute:

	graham$ chmod +x runsim

Now splitting tut5.py into three files: 
	
	netParams.py
	cfg.py
	init.py

Changing runsim to call init.py:

	#!/bin/bash
	# Runs simulation, including MPI.

	numprocesses=$1; if [ -z $numprocesses ]; then numprocesses=4; fi # Number of processes to use
	shift # Eliminate first argument

	mpiexec -np $numprocesses nrniv -python -mpi init.py $@  # Run the model

Copying init.py from earlier network sim:

	"""
	init.py

	Usage:
	    python init.py # Run simulation, optionally plot a raster

	MPI usage:
	    mpiexec -n 4 nrniv -python -mpi init.py

	Contributors: salvadordura@gmail.com
	"""

	#import matplotlib; matplotlib.use('Agg')  # to avoid graphics error in servers
	from netpyne import sim

	simConfig, netParams = sim.readCmdLineArgs()
	#sim.createSimulateAnalyze()

	sim.initialize(
	    simConfig = simConfig,    
	    netParams = netParams)        # create network object and set cfg and net params
	sim.net.createPops()              # instantiate network populations
	sim.net.createCells()             # instantiate network cells based on defined populations
	sim.net.connectCells()            # create connections between cells based on params
	sim.net.addStims()                # add network stimulation
	sim.setupRecording()              # setup variables to record for each cell (spikes, V traces, etc)
	sim.runSim()                      # run parallel Neuron simulation  
	sim.gatherData()                  # gather spiking data and cell info from each node
	sim.saveData()                    # save params, cell info and sim output to file (pickle,mat,txt,etc)
	sim.analysis.plotData()           # plot spike raster etc


Now to break tut5.py into netParams and cfg and try to run.

	graham$ ./runsim 1
	numprocs=1
	NEURON -- VERSION 7.6.4 master (50728e66) 2018-12-14
	Duke, Yale, and the BlueBrain Project -- Copyright 1984-2018
	See http://neuron.yale.edu/neuron/credits

	Note: NeuroML import failed; import/export functions for NeuroML will not be available. 
	  To install the pyNeuroML & libNeuroML Python packages visit: https://www.neuroml.org/getneuroml

	Reading command line arguments using syntax: python file.py [simConfig=filepath] [netParams=filepath]

	Warning: Could not load cfg from command line path or from default cfg.py

	Creating network of 6 cell populations on 1 hosts...
	  Number of cells on node 0: 300 
	  Done; cell creation time = 0.03 s.
	Making connections...
	  Number of connections on node 0: 6796 
	  Done; cell connection time = 0.67 s.
	Adding stims...
	  Number of stims on node 0: 300 
	  Done; cell stims creation time = 0.03 s.

	Running simulation for 1000.0 ms...
	  Done; run time = 3.08 s; real-time ratio: 0.32.

	Gathering data...
	  Done; gather time = 0.17 s.

	Analyzing...
	  Cells: 300
	  Connections: 7096 (23.65 per cell)
	  Spikes: 4879 (16.26 Hz)
	  Simulated time: 1.0 s; 1 workers
	  Run time: 3.08 s
	  Done; saving time = 0.01 s.
	  Done; plotting time = 0.00 s

	Total time = 4.00 s
	>>> 

No figures, and it doesn't seem to have worked:

	Warning: Could not load cfg from command line path or from default cfg.py

It seems the problem may be that in tut5.py we named the config object simConfig instead of cfg...

	simConfig = specs.SimConfig()

Will change all config file lines to:
	
	cfg = specs.SimConfig()

Commenting out line that runs sim in cfg.py

Renaming simConfig to cfg in init.py

Trying to run sim.

	graham$ ./runsim 1

Sim ran successfully, figures appeared but weren't saved.  Off to a good start.

Now that the sim is functional, I'll push to Github.

How I was taught to develop code:
	
	Step 1: make it run.
	Step 2: make it right.
	Step 3: make it fast.

Now to work on Step 2 while ensuring Step 1 continues to work.

Next steps:

Use our cell models
Modify population parameters 

** Updating the README

	# EEE_network

	## Steps to run the network simulation:

	1. cd ~
	2. git clone https://github.com/Neurosim-lab/EEE_network.git
	3. cd EEE_network/
	4. git checkout joes_branch
	5. cd mod
	6. nrnivmodl
	7. cd ../eee_net
	8. ln -s "../mod/x86_64" x86_64
	9. ./runsim

Tested these steps and they work from any location (not just home).

** Meeting agenda / notes

https://docs.google.com/document/d/1kZGWeilbLhc9Lv9ly82xLqsqFRsdW6iAsQdeytzcUXo/edit

*** Upcoming deadlines:

IMAG:		Feb 1, 11:59 EST
https://msmmeeting.nibib.nih.gov/instructions-for-submitting-materials

CNS: 		March 4, 11pm Pacific time
https://www.cnsorg.org/cns-2019-abstract-submission

BRAIN:	March 11, 5pm EST
http://www.cvent.com/events/5th-annual-brain-initiative-investigators-meeting/custom-117-de9c0d8f934b46eb8d80b55bcfbfe96a.aspx

SfN: 		May 2, 5pm EDT
https://www.sfn.org/Meetings/Neuroscience-2019/Dates-and-Deadlines

*** Network Meeting summary

2 populations (E and I)
E from Penny’s single cell model (simplified)
I from PV cells in Salva’s M1 model
5000 cells, 500 inputs per cell
Background inputs to both pops → oscillations
First force plateaus and explore sims
Work towards emergent plateaus / ensembles

Framework for network sims is in joes_branch in EEE_network/eee_net
https://github.com/Neurosim-lab/EEE_network/tree/joes_branch/eee_net

Currently it’s just Netpyne Tutorial 5 broken down into the files needed for organizing a larger simulation, but it runs
Next steps: swapping in our cell models, modifying pop parameters, etc.


** Synaptic clustering articles

Need to read these and pull relevant info.

Synaptic clustering articles:

Single excitatory axons form clustered synapses onto CA1 pyramidal cell dendrites
https://www.nature.com/articles/s41593-018-0084-6
“Here we show that single presynaptic axons form multiple, spatially clustered inputs onto the distal, but not proximal, dendrites of CA1 pyramidal neurons.”

Synaptic clustering by dendritic signalling mechanisms
https://www.sciencedirect.com/science/article/abs/pii/S095943880800086X
“Dendrites are endowed with mechanisms of nonlinear summation of synaptic inputs leading to regenerative dendritic events including local sodium, NMDA and calcium spikes. The generation of these events requires distinct spatio-temporal activation patterns of synaptic inputs. We hypothesise that the recent findings on dendritic spikes and local synaptic plasticity rules suggest clustering of common inputs along a subregion of a dendritic branch.”

Synaptic clustering within dendrites: An emerging theory of memory formation
https://www.sciencedirect.com/science/article/pii/S0301008214001373
“The emerging picture suggests that clusters of functionally related synapses may serve as key computational and memory storage units in the brain. We discuss both experimental evidence and theoretical models that support this hypothesis and explore its advantages for neuronal function.”

Synaptic clustering during development and learning: the why, when, and how
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3364493/
“Previous modeling and experimental studies have predicted that this specificity could entail a subcellular organization whereby synapses that carry similar information are clustered together on local stretches of dendrite. Recent imaging studies have now, for the first time, demonstrated synaptic clustering during development and learning in different neuronal circuits.”

Clusters of synaptic inputs on dendrites of layer 5 pyramidal cells in mouse visual cortex
https://elifesciences.org/articles/09222
“We mapped the spatial organization of glutamatergic synapses between layer 5 pyramidal cells by combining optogenetics and 2-photon calcium imaging in mouse neocortical slices. To mathematically characterize the organization of inputs we developed an approach based on combinatorial analysis of the likelihoods of specific synapse arrangements. We found that the synapses of intralaminar inputs form clusters on the basal dendrites of layer 5 pyramidal cells. These clusters contain 4 to 14 synapses within ≤30 µm of dendrite.”


* 2019-01-17 -- 

In progress
-----------
Setting up network model
Get our cell models in
Adjust population parameters
Set initial connectivity to Sergio's settings?

** Get our cell models in

Sergio's original code:

	# add excitatory populations
	excPopLabels = ['PT5_1', 'PT5_2', 'PT5_3', 'PT5_4'] 
	for k,label in enumerate(excPopLabels):
	    netParams.popParams[label]  = {'cellModel': 'HH_reduced', 'cellType': label,  'xRange': columnA, 'ynormRange': layer['5'], 'numCells': numcellsPT5} 

	# add inhibitory population
	netParams.popParams['PV5']  = {'cellModel': 'HH_simple',  'cellType': 'PV','xRange': columnA, 'ynormRange': layer['5'], 'numCells': numcellsPV5} 

The layer['5'] comes from:
	
	# layer boundaries
	layer = {'5': [0.2,0.623], 'long': [0.7,1.0]} # yRange in column

Code from tutorial:

	netParams.popParams['E2'] = {'cellType': 'E', 'numCells': 50, 'yRange': [100,300], 'cellModel': 'HH'}
	netParams.popParams['I2'] = {'cellType': 'I', 'numCells': 50, 'yRange': [100,300], 'cellModel': 'HH'}
	netParams.popParams['E4'] = {'cellType': 'E', 'numCells': 50, 'yRange': [300,600], 'cellModel': 'HH'}
	netParams.popParams['I4'] = {'cellType': 'I', 'numCells': 50, 'yRange': [300,600], 'cellModel': 'HH'}
	netParams.popParams['E5'] = {'cellType': 'E', 'numCells': 50, 'ynormRange': [0.6,1.0], 'cellModel': 'HH'}
	netParams.popParams['I5'] = {'cellType': 'I', 'numCells': 50, 'ynormRange': [0.6,1.0], 'cellModel': 'HH'}

New code:

	## Population parameters
	netParams.popParams['PT5_1'] = {'cellType': 'E', 'numCells': 200, 'ynormRange': [0.2,0.623], 'cellModel': 'HH'}
	netParams.popParams['PT5_2'] = {'cellType': 'E', 'numCells': 200, 'ynormRange': [0.2,0.623], 'cellModel': 'HH'}
	netParams.popParams['PT5_3'] = {'cellType': 'E', 'numCells': 200, 'ynormRange': [0.2,0.623], 'cellModel': 'HH'}
	netParams.popParams['PT5_4'] = {'cellType': 'E', 'numCells': 200, 'ynormRange': [0.2,0.623], 'cellModel': 'HH'}
	netParams.popParams['PV5'] = {'cellType': 'I', 'numCells': 200, 'ynormRange': [0.2,0.623], 'cellModel': 'HH'}

Getting a strange NEURON error. Looking through netParams for any other necessary changes.

The I-->E pops need to be changed, from:

	netParams.connParams['I->E'] = {
	  'preConds': {'cellType': 'I'}, 'postConds': {'pop': ['E2','E4','E5']},       #  I -> E
	  
To:

	netParams.connParams['I->E'] = {
	  'preConds': {'cellType': 'I'}, 'postConds': {'pop': ['E']},       #  I -> E

Trying again.

Hmmm.  When I run it using once core, it seems to complete the sim, but stalls at the connectivity plot.  (There are 79621 connections, which probably would take awhile to plot...)

Reducing the number of cells and trying again.

Now it works and plots.  Trying it with multiple cores.

Still works.  Will add a variable to set the number of neurons.

Still works.  I have succesfully renamed the populations.

Now to use our cell models.  But first committing.





